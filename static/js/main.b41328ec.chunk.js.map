{"version":3,"sources":["InputField.jsx","costs.js","calculator.js","Hero.jsx","HeroLoader.js","App.js","index.js"],"names":["InputField","props","name","type","value","onChange","id","htmlFor","e","parseInt","target","cardCostPerLevel","goldCostPerLevelForCommon","goldCostPerLevelForRare","goldCostPerLevelForEpic","heroes","rarity","cardsInvested","level","costs","slice","reduce","a","b","levelUp","totalCards","cardsNotYetSpent","levelReached","i","length","Hero","storedCards","storedLevel","useState","cards","setCards","setLevel","calculateTotalCards","potentialLevel","calculatePotentialLevel","goldCost","currentLevel","targetLevel","calculateGoldCost","cardsTilNextLevel","leftOverCards","calculateCardsTilNextLevel","useEffect","heroObject","localStorage","setItem","JSON","stringify","className","HeroLoader","hero","parse","getItem","App","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b41328ec.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const InputField = props => {\n  const { name, type, value, onChange } = props;\n  const id = name + type;\n\n  return (\n    <div>\n      <label htmlFor={id}>\n        Current {type}:\n        <input\n          type=\"number\"\n          id={id}\n          value={value}\n          onChange={e => onChange(parseInt(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n","export const cardCostPerLevel = [\n  0,\n  0,\n  2,\n  5,\n  10,\n  20,\n  45,\n  75,\n  150,\n  300,\n  600,\n  1000,\n  1500,\n  2000,\n  2500,\n  3000,\n  4000,\n  5000,\n  6000\n];\n\nexport const goldCostPerLevelForCommon = [\n  0,\n  0,\n  10,\n  25,\n  50,\n  150,\n  450,\n  750,\n  1500,\n  3000,\n  6000,\n  12000,\n  20000,\n  30000,\n  40000,\n  55000,\n  75000,\n  100000,\n  125000\n];\n\nexport const goldCostPerLevelForRare = [\n  0,\n  0,\n  50,\n  150,\n  450,\n  750,\n  1500,\n  3000,\n  6000,\n  12000,\n  20000,\n  30000,\n  40000,\n  55000,\n  75000,\n  100000,\n  125000\n];\n\nexport const goldCostPerLevelForEpic = [\n  0,\n  0,\n  450,\n  750,\n  1500,\n  3000,\n  6000,\n  12000,\n  20000,\n  30000,\n  40000,\n  55000,\n  75000,\n  100000,\n  125000\n];\n\nexport const heroes = [\n  { name: \"Drakeling\", rarity: \"epic\" },\n  { name: \"Druid\", rarity: \"epic\" },\n  { name: \"Enchantress\", rarity: \"epic\" },\n  { name: \"Frog Mystic\", rarity: \"epic\" },\n  { name: \"Genie\", rarity: \"epic\" },\n  { name: \"Sentinel\", rarity: \"epic\" },\n  { name: \"Priest\", rarity: \"epic\" },\n  { name: \"Rocketeer\", rarity: \"epic\" },\n  { name: \"Shaman\", rarity: \"epic\" },\n  { name: \"Vampire\", rarity: \"epic\" },\n  { name: \"Wraith\", rarity: \"epic\" },\n  { name: \"Assassin\", rarity: \"rare\" },\n  { name: \"Banshee\", rarity: \"rare\" },\n  { name: \"Blacksmith\", rarity: \"rare\" },\n  { name: \"Cultist\", rarity: \"rare\" },\n  { name: \"Giant\", rarity: \"rare\" },\n  { name: \"Jaguar\", rarity: \"rare\" },\n  { name: \"Kong\", rarity: \"rare\" },\n  { name: \"Orc\", rarity: \"rare\" },\n  { name: \"Paladin\", rarity: \"rare\" },\n  { name: \"Phoenix\", rarity: \"rare\" },\n  { name: \"Robot\", rarity: \"rare\" },\n  { name: \"Ice Queen\", rarity: \"rare\" },\n  { name: \"Sorceress\", rarity: \"rare\" },\n  { name: \"Thunder Idol\", rarity: \"rare\" },\n  { name: \"Wizard\", rarity: \"rare\" },\n  { name: \"Zombie\", rarity: \"rare\" },\n  { name: \"Archer\", rarity: \"common\" },\n  { name: \"Barbarian\", rarity: \"common\" },\n  { name: \"Berserker\", rarity: \"common\" },\n  { name: \"Bomber\", rarity: \"common\" },\n  { name: \"Frost Fox\", rarity: \"common\" },\n  { name: \"Goblin\", rarity: \"common\" },\n  { name: \"Golem\", rarity: \"common\" },\n  { name: \"Knight\", rarity: \"common\" },\n  { name: \"Naga\", rarity: \"common\" },\n  { name: \"Pirate\", rarity: \"common\" },\n  { name: \"Warrior\", rarity: \"common\" },\n  { name: \"Satyr\", rarity: \"common\" },\n  { name: \"Skeleton\", rarity: \"common\" },\n  { name: \"Striker\", rarity: \"common\" },\n  { name: \"Treant\", rarity: \"common\" },\n  { name: \"Armadillo\", rarity: \"common\" },\n  { name: \"Yeti\", rarity: \"common\" }\n];\n","import * as costs from \"./costs.js\";\n\nexport const calculateTotalCards = (cards, level) => {\n  const totalCards = cardsInvested(level) + cards;\n  return totalCards;\n};\n\nconst cardsInvested = level => {\n  return costs.cardCostPerLevel.slice(0, level + 1).reduce((a, b) => a + b, 0);\n};\n\nexport const levelUp = totalCards => {\n  let cardsNotYetSpent = totalCards;\n  let levelReached = 0;\n  for (let i = 0; i < costs.cardCostPerLevel.length; i++) {\n    if (cardsNotYetSpent >= costs.cardCostPerLevel[i]) {\n      cardsNotYetSpent -= costs.cardCostPerLevel[i];\n      levelReached = i;\n    }\n  }\n  return [levelReached, cardsNotYetSpent];\n};\n\nexport const calculatePotentialLevel = totalCards => {\n  return levelUp(totalCards)[0];\n};\n\nexport const calculateCardsTilNextLevel = totalCards => {\n  const [levelReached, leftOverCards] = levelUp(totalCards);\n  return costs.cardCostPerLevel[levelReached + 1] - leftOverCards;\n};\n\nexport const calculateGoldCost = (rarity, currentLevel, targetLevel) => {\n  if (rarity === \"common\") {\n    return costs.goldCostPerLevelForCommon\n      .slice(currentLevel + 1, targetLevel + 1)\n      .reduce((a, b) => a + b, 0);\n  } else if (rarity === \"rare\") {\n    return costs.goldCostPerLevelForRare\n      .slice(currentLevel + 1, targetLevel + 1)\n      .reduce((a, b) => a + b, 0);\n  } else if (rarity === \"epic\") {\n    return costs.goldCostPerLevelForEpic\n      .slice(currentLevel + 1, targetLevel + 1)\n      .reduce((a, b) => a + b, 0);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { InputField } from \"./InputField\";\nimport {\n  calculateTotalCards,\n  calculatePotentialLevel,\n  calculateGoldCost,\n  calculateCardsTilNextLevel\n} from \"./calculator\";\n\nconst Hero = props => {\n  const { name, storedCards, storedLevel, rarity } = props;\n\n  const [cards, setCards] = useState(storedCards);\n  const [level, setLevel] = useState(storedLevel);\n\n  const totalCards = calculateTotalCards(cards, level);\n  const potentialLevel = calculatePotentialLevel(totalCards);\n  const goldCost = calculateGoldCost(rarity, level, potentialLevel);\n  const cardsTilNextLevel = calculateCardsTilNextLevel(totalCards);\n\n  useEffect(() => {\n    const heroObject = {\n      name: name,\n      rarity: rarity,\n      cards: cards,\n      level: level\n    };\n\n    localStorage.setItem(\"s4p-\" + name, JSON.stringify(heroObject));\n  }, [cards, level, name, rarity]);\n\n  return (\n    <div className={\"hero \" + rarity}>\n      <h3>{name}</h3>\n      <InputField name={name} type=\"cards\" onChange={setCards} value={cards} />\n      <InputField name={name} type=\"level\" onChange={setLevel} value={level} />\n      <span>Potential Level: {potentialLevel}</span>\n      <br />\n      <span>Gold cost: {goldCost}</span>\n      <br />\n      <span>\n        Cards until {potentialLevel + 1}: {cardsTilNextLevel}\n      </span>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from \"react\";\nimport Hero from \"./Hero\";\n\nconst HeroLoader = props => {\n  const { name, rarity } = props;\n  const hero = JSON.parse(localStorage.getItem(\"s4p-\" + name));\n  return hero ? (\n    <Hero\n      name={name}\n      rarity={rarity}\n      storedCards={hero.cards}\n      storedLevel={hero.level}\n    />\n  ) : (\n    <Hero name={name} rarity={rarity} storedCards={0} storedLevel={0} />\n  );\n};\n\nexport default HeroLoader;\n","import React from \"react\";\nimport HeroLoader from \"./HeroLoader\";\nimport { heroes } from \"./costs\";\nimport \"./app.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      {heroes.map((hero, index) => (\n        <HeroLoader key={index} name={hero.name} rarity={hero.rarity} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}